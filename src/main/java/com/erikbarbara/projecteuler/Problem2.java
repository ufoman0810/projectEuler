package com.erikbarbara.projecteuler;

import java.util.ArrayList;
import java.util.List;

/* 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
*/
public class Problem2 {
	
	static int sumFibonnaciTermsBelowValue(int value) {
		if(value<1) {
			throw new IllegalArgumentException("Value must be greater than or equal to 1.");
		}
		
		return sumList(removeOddValues(fibonnaciTermsBelowValue(value)));
	}
	
	private static List<Integer> removeOddValues(List<Integer> integerList) {
		for(int i=0;i<integerList.size();i++) {
			if(integerList.get(i)%2!=0) {
				integerList.remove(i);
				i--;
			}
		}
		return integerList;
	}

	private static int sumList(List<Integer> integerList) {
		int sum=0;
		for(int i : integerList) {
			sum+=i;
		}
		return sum;
	}
	
	private static List<Integer> fibonnaciTermsBelowValue(int value) {
		List<Integer> fibonnaciTerms = new ArrayList<Integer>();
		fibonnaciTerms.add(1);
		fibonnaciTerms.add(2);
		while(fibonnaciTerms.get(fibonnaciTerms.size()-1) <= value) {
			fibonnaciTerms.add(fibonnaciTerms.get(fibonnaciTerms.size()-1)+fibonnaciTerms.get(fibonnaciTerms.size()-2));
		}
		fibonnaciTerms.remove(fibonnaciTerms.size()-1);
		
		return fibonnaciTerms;
	}
	
	public static void main(String[] args) {
		System.out.println(Problem2.sumFibonnaciTermsBelowValue(4000000));
	}

}
